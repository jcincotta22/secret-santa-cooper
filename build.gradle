import jp.classmethod.aws.gradle.ec2.AmazonEC2StartInstanceTask
import jp.classmethod.aws.gradle.ec2.AmazonEC2StopInstanceTask

apply plugin: 'java'
apply plugin: 'application'

mainClassName = 'christmas.Bootstrap'
sourceCompatibility = 1.8
targetCompatibility = 1.8
version = '1.0.0'

def sparkJavaVersion = '2.9.1'
def jacksonVersion = '2.9.9'
def mongoVersion = '3.10.2'

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "jp.classmethod.aws:gradle-aws-plugin:0.30"
        classpath "com.moowork.gradle:gradle-node-plugin:1.2.0"
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile "com.sparkjava:spark-core:${sparkJavaVersion}"
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.7'
    testCompile "junit:junit:4.12"
    compile 'org.reflections:reflections:0.9.11'
    compile group: 'log4j', name: 'log4j', version: '1.2.16'
    compile "org.slf4j:slf4j-simple:1.7.7"
    compile 'com.google.code.gson:gson:2.8.5'
    compile 'com.google.code.gson:gson:2.8.5'
    compile "org.mongodb:mongo-java-driver:${mongoVersion}"
    compile 'com.fasterxml.jackson.core:jackson-databind:2.9.4'
    compile 'com.amazonaws:aws-java-sdk-iam:1.11.78'
    compile 'com.amazonaws:aws-java-sdk-ec2:1.11.78'
    compile "com.fasterxml.jackson.jr:jackson-jr-all:$jacksonVersion"

}

apply plugin: 'jp.classmethod.aws'
apply plugin: 'jp.classmethod.aws.ec2'


aws {
    profileName = 'default'
    region = 'us-west-2'
}



task stopInstance(type: AmazonEC2StopInstanceTask) {
    instanceIds += 'i-0cba70c3c6a3ed897'
}


task stopBastion(type: AmazonEC2StopInstanceTask) {
    instanceIds += 'i-0cba70c3c6a3ed897'
}

task startInstance(type: AmazonEC2StartInstanceTask) {
    instanceIds += 'i-0cba70c3c6a3ed897'
}

jar {
    baseName = 'secret-santa'
    manifest {
        attributes("secret-santa": baseName,
                "Implementation-Version": version,
                "Main-Class": "christmas.Bootstrap"
        )
    }

    from('webapp/build') {
        into 'webapp'
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

